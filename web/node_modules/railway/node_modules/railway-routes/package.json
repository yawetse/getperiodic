{
  "author": {
    "name": "Anatoliy Chakkaev"
  },
  "name": "railway-routes",
  "description": "Resourceful routing for ExpressJS, ruby-on-rails 2 style",
  "tags": "express, routing, ror, rails, railway",
  "version": "0.0.8-2",
  "homepage": "http://railwajs.com/routing.html",
  "repository": {
    "type": "git",
    "url": "git://github.com/1602/railway-routes.git"
  },
  "main": "lib/railway_routes.js",
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {
    "express": "3.x"
  },
  "devDependencies": {
    "nodeunit": "*",
    "semicov": "latest"
  },
  "readme": "## Description\n\nThis is simple routing for ExpressJS framework. It allows you to write routes in Ruby on rails 2 style.\n\n## Using with Express\n\nAfter creating app instead of writing code like `app.get('smth', doSmth);` generate routes like that:\n\n    var map = new require('railway-routes').Map(app, handler);\n    map.resources('posts');\n    map.namespace('admin', function (admin) {\n       admin.resources('users');\n    });\n\nIn this example `handler` function will called immediately for each route, accepting three args: `ns`, `controller`, `action` and should return method which will me actually called to server request.\n\nFor example you have two controllers: `posts` and `admin/users` which looks like regular modules:\n\n`controllers/posts_controller.js`\n\n    exports.show = function (req, res) {\n        res.send('show');\n    };\n\n    exports.edit = function (req, res) {\n        res.send('edit');\n    };\n\n    exports.destroy = function (req, res) {\n        res.send('destroy');\n    };\n\n    ...\n\nsame for `controllers/admin/users_controller.js`\n\nIn that case your handler should be:\n\n    function handler(ns, controller, action) {\n        try {\n            var ctlFile = './controllers/' + ns + controller + '_controller';\n            var responseHandler =  require(ctlFile)[action];\n        } catch(e) {}\n        return responseHandler || function (req, res) {\n            res.send('Handler not found for ' + ns + controller + '#' + action);\n        };\n    }\n\n## Features\n\n- resourceful routes\n- generic routes\n- url helpers\n- namespaces\n- custom helper names / paths for resources\n\n## Docs\n\nhttp://railwayjs.com/routing.html\n\n### Singleton resources\n\nExample:\n\n    map.resource('account');\n\nWill generate the following routes:\n\n    GET     /account        account#show\n    POST    /account        account#create\n    GET     /account/new    account#new\n    GET     /account/edit   account#edit\n    DELETE  /account        account#destroy\n    PUT     /account        account#update\n\nSingleton resources can also have nested resources. For example:\n\n    map.resource('account', function(account) {\n      account.resources('posts');\n    });\n\n## Example app\n\nCheck out [example app][1] to deal with middleware, route handling, and generic routes:\n\n    git clone git://github.com/anatoliychakkaev/railway-routes-example-app.git\n    cd railway-routes-example-app\n    npm install\n    node app.js\n\n [1]: http://github.com/anatoliychakkaev/railway-routes-example-app\n",
  "_id": "railway-routes@0.0.8-2",
  "_from": "railway-routes@>= 0.0.6"
}
